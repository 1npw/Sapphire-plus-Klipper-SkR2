#####################################################################
#  Bed leveling
#####################################################################
[bed_mesh]
speed: 200
horizontal_move_z: 4
mesh_min: 50,50
mesh_max: 250,250
fade_start: 0.6
fade_end: 10.0
probe_count: 4,4
mesh_pps: 2,3
algorithm: bicubic
relative_reference_index: 5
#move_check_distance: 3
split_delta_z: .025

[z_tilt]
z_positions: 40,194
	260,194
points: 40,193
	260,194
speed: 200
horizontal_move_z: 4
retries: 20
retry_tolerance: 0.0025

[bed_screws]
screw1: 35,35
screw2: 265,35
screw3: 265,265
screw4: 35,265

[screws_tilt_adjust] 
screw1: 35,75 
screw1_name: front left screw 
screw2: 265,75 
screw2_name: front right screw 
screw3: 265,300 
screw3_name: rear right screw 
screw4: 35,300 
screw4_name: rear left screw 
horizontal_move_z: 10 
speed: 50 
screw_thread: CCW-M3

#####################################################################
#  Macro
#####################################################################
[gcode_macro testLEVEL]
gcode: BED_SCREWS_ADJUST

[gcode_macro testNEXTPOINT]
gcode: ADJUSTED

[gcode_macro testACCEPT]
gcode: ACCEPT

[gcode_macro BED_MESH_CALIBRATE]
rename_existing: BED_MESH_CALIBRATE_BASE
; gcode parameters
variable_parameter_AREA_START : 0,0
variable_parameter_AREA_END : 0,0
; the clearance between print area and probe area
variable_mesh_area_offset : 5.0
; number of sample per probe point
variable_probe_samples : 2
; minimum probe count
variable_min_probe_count : 3
gcode:
    {% if params.AREA_START and params.AREA_END %}
        {% set bedMeshConfig = printer["configfile"].config["bed_mesh"] %}
        {% set safe_min_x = bedMeshConfig.mesh_min.split(",")[0]|float %}
        {% set safe_min_y = bedMeshConfig.mesh_min.split(",")[1]|float %}
        {% set safe_max_x = bedMeshConfig.mesh_max.split(",")[0]|float %}
        {% set safe_max_y = bedMeshConfig.mesh_max.split(",")[1]|float %}

        {% set area_min_x = params.AREA_START.split(",")[0]|float %}
	{% set area_min_y = params.AREA_START.split(",")[1]|float %}
	{% set area_max_x = params.AREA_END.split(",")[0]|float %}
	{% set area_max_y = params.AREA_END.split(",")[1]|float %}

        {% set meshPointX = bedMeshConfig.probe_count.split(",")[0]|float %}
        {% set meshPointY = bedMeshConfig.probe_count.split(",")[1]|float %}


        {% if (area_min_x < area_max_x) and (area_min_y < area_max_y) %}
            {% if area_min_x - mesh_area_offset >= safe_min_x %}
                {% set area_min_x = area_min_x - mesh_area_offset %}
            {% else %}
                {% set area_min_x = safe_min_x %}
            {% endif %}

            {% if area_min_y - mesh_area_offset >= safe_min_y %}
                {% set area_min_y = area_min_y - mesh_area_offset %}
            {% else %}
                {% set area_min_y = safe_min_y %}
            {% endif %}

            {% if area_max_x + mesh_area_offset <= safe_max_x %}
                {% set area_max_x = area_max_x + mesh_area_offset %}
            {% else %}
                {% set area_max_x = safe_max_x %}
            {% endif %}

            {% if area_max_y + mesh_area_offset <= safe_max_y %}
                {% set area_max_y = area_max_y + mesh_area_offset %}
            {% else %}
                {% set area_max_y = safe_max_y %}
            {% endif %}
 
            {% set meshPointX = (meshPointX * (area_max_x - area_min_x) / (safe_max_x - safe_min_x))|int %}
            {% if meshPointX < min_probe_count %}
                {% set meshPointX = min_probe_count %}
            {% endif %}

            {% set meshPointY = (meshPointY * (area_max_y -area_min_y ) / (safe_max_y - safe_min_y))|int %}
            {% if meshPointY < min_probe_count %}
                {% set meshPointY = min_probe_count %}
            {% endif %}

            BED_MESH_CALIBRATE_BASE mesh_min={area_min_x},{area_min_y} mesh_max={area_max_x},{area_max_y} probe_count={meshPointX},{meshPointY} samples={probe_samples|int}
        {% else %}
            BED_MESH_CALIBRATE_BASE
        {% endif %}
    {% else %}
        BED_MESH_CALIBRATE_BASE

    {% endif %}

